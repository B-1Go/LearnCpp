
# include <stdio.h>

// 변수의 종류
// 1. 지역변수
// 2. 전역변수
// 3. 정적변수(static)
// 4. 외부변수(extern)

// 메모리 영역
// 1. 스택 영역
// 2. 데이터 영역
// 3. 읽기 전용(코드, ROM)
// 4. 힙 영역


// 전역함수
int g_i = 0; // Data 영역

// Data 영역 특징
// 프로그램 시작 시 생성
// 프로그램 종료 시 해제

#include "func.h"
// 해더파일에 코드를 구현해 놓으면 되지 않을까? 라고 생각하면 안된다.
// #include 라는 녀셕은 코드를 복붙하는 녀셕인데
// 다른 파일에서 참조해서 사용하면 그 파일에도 똑같은 코드가 작성된다.
// 분할 구현한 파일들을 나중에 빌드 하는 과정에서 LNK(링크)로 코드가 다 묶이는데
// 똑같은 변수가 또는 함수가 반복되는 문제가 발생한다.
// 따라서 헤더파일은 선언만 해 놓는다.
// 그러면 전역변수는 어떻게 사용할 수 있을까?
// 그래서 나온 개념이 static 과 외부 변수 이다.
// 
// main 에 선언한 전역변수를 다른 파일에서 사용할 수 는 없지만
// 빌드하면 LNK(링크)가 되어 하나가 되기 때문에 Data영역에 작동을 잘 된다.
// 그러나 디버그나 컴파일하여 코드를 짜는 와중에 확인 안된다는 점이 분한 구현의 문제이다.
// 그렇다고 각 파일마다 똑같은 전역변수를 선언하면 컴파일(해당파일만)과정에서 .obj 파일은 문제없는데 나중에 합쳐지면서 문제이다.


int main()
{
	int i = Mul(10, 20);

	Add(0, 0);
	return 0;
}